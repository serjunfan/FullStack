{"ast":null,"code":"var _jsxFileName = \"/home/luinpin/fullstack/part1/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.course\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n};\n_c = Header;\nconst Content = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.part1, \" \", props.exercises1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.part2, \" \", props.exercises2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.part3, \" \", props.exercises3]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_c2 = Content;\nconst Total = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises \", props.exercises1 + props.exercises2 + props.exercises3, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 4\n  }, this);\n};\n_c3 = Total;\nconst App = () => {\n  const course = 'Half Stack application development';\n  const part1 = 'Fundamentals of React';\n  const exercises1 = 10;\n  const part2 = 'Using props to pass data';\n  const exercises2 = 7;\n  const part3 = 'State of a component';\n  const exercises3 = 14;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      part1: part1,\n      exercises1: exercises1,\n      part2: part2,\n      exercises2: exercises2,\n      part3: part3,\n      exercises3: exercises3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      exercises1: exercises1,\n      exercises2: exercises2,\n      exercises3: exercises3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Content\");\n$RefreshReg$(_c3, \"Total\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["Header","props","course","Content","part1","exercises1","part2","exercises2","part3","exercises3","Total","App"],"sources":["/home/luinpin/fullstack/part1/src/App.js"],"sourcesContent":["const Header = (props) => {\n  return(\n    <h1>{props.course}</h1>\n  )\n}\nconst Content = (props) =>{\n  return(\n  <>\n    <p>\n      {props.part1} {props.exercises1}\n    </p>\n    <p>\n      {props.part2} {props.exercises2}\n    </p>\n    <p>\n      {props.part3} {props.exercises3}\n    </p>\n  </>\n  )\n}\nconst Total = (props) =>{\n  return(\n   <p>Number of exercises {props.exercises1 + props.exercises2 \n     +props.exercises3} </p>\n  )\n}\nconst App = () => {\n  const course = 'Half Stack application development'\n  const part1 = 'Fundamentals of React'\n  const exercises1 = 10\n  const part2 = 'Using props to pass data'\n  const exercises2 = 7\n  const part3 = 'State of a component'\n  const exercises3 = 14\n  return(\n    <div>\n      <Header course={course} />\n      <Content part1={part1} exercises1={exercises1} part2={part2}\n      exercises2={exercises2} part3={part3} exercises3={exercises3} />\n      <Total exercises1={exercises1} exercises2={exercises2}\n      exercises3={exercises3} />\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":";;;AAAA,MAAMA,MAAM,GAAIC,KAAK,IAAK;EACxB,oBACE;IAAA,UAAKA,KAAK,CAACC;EAAM;IAAA;IAAA;IAAA;EAAA,QAAM;AAE3B,CAAC;AAAA,KAJKF,MAAM;AAKZ,MAAMG,OAAO,GAAIF,KAAK,IAAI;EACxB,oBACA;IAAA,wBACE;MAAA,WACGA,KAAK,CAACG,KAAK,EAAC,GAAC,EAACH,KAAK,CAACI,UAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7B,eACJ;MAAA,WACGJ,KAAK,CAACK,KAAK,EAAC,GAAC,EAACL,KAAK,CAACM,UAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7B,eACJ;MAAA,WACGN,KAAK,CAACO,KAAK,EAAC,GAAC,EAACP,KAAK,CAACQ,UAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7B;EAAA,gBACH;AAEL,CAAC;AAAA,MAdKN,OAAO;AAeb,MAAMO,KAAK,GAAIT,KAAK,IAAI;EACtB,oBACC;IAAA,WAAG,sBAAoB,EAACA,KAAK,CAACI,UAAU,GAAGJ,KAAK,CAACM,UAAU,GACxDN,KAAK,CAACQ,UAAU,EAAC,GAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAAI;AAE5B,CAAC;AAAA,MALKC,KAAK;AAMX,MAAMC,GAAG,GAAG,MAAM;EAChB,MAAMT,MAAM,GAAG,oCAAoC;EACnD,MAAME,KAAK,GAAG,uBAAuB;EACrC,MAAMC,UAAU,GAAG,EAAE;EACrB,MAAMC,KAAK,GAAG,0BAA0B;EACxC,MAAMC,UAAU,GAAG,CAAC;EACpB,MAAMC,KAAK,GAAG,sBAAsB;EACpC,MAAMC,UAAU,GAAG,EAAE;EACrB,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,MAAM,EAAEP;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAC1B,QAAC,OAAO;MAAC,KAAK,EAAEE,KAAM;MAAC,UAAU,EAAEC,UAAW;MAAC,KAAK,EAAEC,KAAM;MAC5D,UAAU,EAAEC,UAAW;MAAC,KAAK,EAAEC,KAAM;MAAC,UAAU,EAAEC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eAChE,QAAC,KAAK;MAAC,UAAU,EAAEJ,UAAW;MAAC,UAAU,EAAEE,UAAW;MACtD,UAAU,EAAEE;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACtB;AAEV,CAAC;AAAA,MAjBKE,GAAG;AAmBT,eAAeA,GAAG;AAAC;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}