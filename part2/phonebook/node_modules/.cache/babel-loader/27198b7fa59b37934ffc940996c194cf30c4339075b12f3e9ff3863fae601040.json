{"ast":null,"code":"var _jsxFileName = \"/home/luinpin/fullstack/part1/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowHeader = () => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \" give feedback \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = ShowHeader;\nconst StatisticLine = _ref => {\n  let {\n    text,\n    value\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [\" \", text, \" \", value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 42\n  }, this);\n};\n_c2 = StatisticLine;\nconst Statistics = _ref2 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref2;\n  let all = good + neutral + bad;\n  let average = (good - bad) / all;\n  let positive = good / all;\n  if (all == 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" No feedback given \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"good\",\n        value: good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 2\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"neutral\",\n        value: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 2\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"bad\",\n        value: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 2\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"all\",\n        value: all\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 2\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"average\",\n        value: average\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 2\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"positive\",\n        value: positive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 2\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Statistics;\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.handleClick,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_c4 = Button;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ShowHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" statistics \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"ShowHeader\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["useState","ShowHeader","StatisticLine","text","value","Statistics","good","neutral","bad","all","average","positive","Button","props","handleClick","App","setGood","setNeutral","setBad"],"sources":["/home/luinpin/fullstack/part1/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst ShowHeader = () =>{\n  return(\n    <h1> give feedback </h1>\n  )\n}\nconst StatisticLine = ({text, value}) => <td> {text} {value}</td>\nconst Statistics = ({good, neutral, bad}) =>{\n  let all = good + neutral + bad\n  let average = (good - bad) / all\n  let positive = good / all\n  if(all == 0){\n    return(\n      <p> No feedback given </p>\n    )\n  }\n  return(\n    <table>\n      <tr>\n\t<StatisticLine text=\"good\" value={good} />\n      </tr>\n      <tr>\n\t<StatisticLine text=\"neutral\" value={neutral} />\n      </tr>\n      <tr>\n\t<StatisticLine text=\"bad\" value={bad} />\n      </tr>\n      <tr>\n\t<StatisticLine text=\"all\" value={all} />\n      </tr>\n      <tr>\n\t<StatisticLine text=\"average\" value={average} />\n      </tr>\n      <tr>\n\t<StatisticLine text=\"positive\" value={positive} />\n      </tr>\n    </table>\n  )\n}\nconst Button = (props) =>{\n return(<button onClick={props.handleClick}> \n      {props.text} \n    </button>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n\n  return(\n    <div>\n      <ShowHeader />\n      <Button handleClick={() => setGood(good+1)} text=\"good\" />\n      <Button handleClick={() => setNeutral(neutral+1)} text=\"neutral\" />\n      <Button handleClick={() => setBad(bad+1)} text=\"bad\" />\n      <h1> statistics </h1>\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}